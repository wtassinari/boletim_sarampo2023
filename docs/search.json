{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-12-30T18:22:01-03:00"
    },
    {
      "path": "creditos.html",
      "title": "Créditos",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\nname: “Coordenação: Yara Hökerberg”\nurl: (yarahahr@ini.fiocruz.br)\naffiliation: LABEPICIN/INI/FIOCRUZ\naffiliation_url: https://www.ini.fiocruz.br/labepiclin\nname: “Vice-Coordenação: Raquel Vasconcelos”\nurl: (raquel.vasconcellos@ini.fiocruz.br)\naffiliation: LABEPICIN/INI/FIOCRUZ\naffiliation_url: https://www.ini.fiocruz.br/labepiclin\nname: “Sônia Regina Lambert”\nurl: (sonia.lambert@ini.fiocruz.br)\naffiliation: LABEPICIN/INI/FIOCRUZ\naffiliation_url: https://www.ini.fiocruz.br/labepiclin\nname: “Luan da Silva”\nurl: (snoedasilva@gmail.com)\naffiliation: IFRJ\naffiliation_url:\nname: “Wagner Tassinari”\nurl: (tassinari@ufrrj.br)\naffiliation: DEMAT/ICE/UFRRJ\naffiliation_url: http://www.ice.ufrrj.br/demat/\n\n\n\n",
      "last_modified": "2022-12-30T18:22:02-03:00"
    },
    {
      "path": "index.html",
      "title": "Boletim Eletrônico sobre o Sarampo no Brasil, 2010 - 2020",
      "description": "Todo o conteúdo deste site faz parte do Projeto PMA INOVA FIOCRUZ 2020, intitulado *Análise geográfica da Cobertura Vacinal e a ocorrência do Sarampo no Brasil, 2000-2019.*\n",
      "author": [],
      "contents": "\n\nSarampo é uma doença altamente contagiosa causada pelo vírus do sarampo (Measles morbillivirus). Os sinais e sintomas iniciais geralmente incluem febre, muitas vezes superior a 40 ºC, tosse, corrimento nasal e olhos inflamados. Dois ou três dias depois do início dos sintomas formam-se no interior da boca pequenos pontos brancos, denominados sinais de Koplik.\n\n\nEntre três a cinco dias depois do início dos sintomas aparece uma mancha vermelha e plana que geralmente tem início na face e daí se espalha para o resto do corpo.\n\n\nOs sintomas começam-se a manifestar entre dez e doze dias depois do contágio e duram entre sete a dez dias. Em cerca de 30% dos casos ocorrem complicações, as quais podem incluir, entre outras, diarreia, cegueira, inflamação do cérebro e pneumonia. A rubéola e a roséola, apesar de causarem sintomas semelhantes aos do sarampo, são causadas por vírus diferentes e apresentam características distintas.\n\n\n\n\nFigure 1: por MArta Bonimond\n\n\n\n\n\n\n",
      "last_modified": "2022-12-30T18:22:01-03:00"
    },
    {
      "path": "sarampo.html",
      "title": "Sarampo",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\n\n\n\n\n\n\n\nBase tratada (só casos Sarampo)\n\n\ncasos$DT_SIN_PRI2 <- as.Date(casos$DT_SIN_PRI, format=\"%m/%d/%Y\")\n casos <- casos |> mutate(sem_epi = lubridate::epiweek(as.Date(DT_SIN_PRI2)),\n                          ano_epi = lubridate::epiyear(as.Date(DT_SIN_PRI2)),\n                          data_sem = aweek::get_date(sem_epi, ano_epi, start =7),\n                          mes_ano = yearmonth(DT_SIN_PRI2))\n\n\nSerie temporal por ano\n\n\n# Fazendo uma tabela de anos\nano_epi <- 2000:2020\nfreq <- rep(0, 21)\nano_tabela <- as.data.frame(cbind(ano_epi, freq))\n\ncasos.st.ano <- casos |> \n           group_by(ano_epi) |>\n           count(name=\"casos.sarampo\") |>\n           filter(ano_epi > 1999 & ano_epi < 2021) \n\ncasos.st.ano <- ano_tabela |>\n           left_join(casos.st.ano, by=\"ano_epi\") |>\n            mutate(casos.sarampo = ifelse(is.na(casos.sarampo), 0, casos.sarampo)) |>\n            dplyr::select(ano_epi, casos.sarampo)\n\n\n# casos.st.ano$ano_epi <- as.factor(casos.st.ano$ano_epi)\n# levels(casos.st.ano$ano_epi) <- c('2000','2001','2002','2003','2004','2005','2006','2007','2008','2009',\n#                                 '2010','2011','2012','2013','2014','2015','2016','2017','2018','2019', '2020')\n\n\ncasos.st.ano |>\n  select(ano_epi, casos.sarampo) |>\n  kbl() |>\n  kable_paper(\"hover\", full_width=F)\n\n\nano_epi\n\n\ncasos.sarampo\n\n\n2000\n\n\n138\n\n\n2001\n\n\n62\n\n\n2002\n\n\n25\n\n\n2003\n\n\n12\n\n\n2004\n\n\n0\n\n\n2005\n\n\n16\n\n\n2006\n\n\n57\n\n\n2007\n\n\n26\n\n\n2008\n\n\n14\n\n\n2009\n\n\n4\n\n\n2010\n\n\n73\n\n\n2011\n\n\n48\n\n\n2012\n\n\n5\n\n\n2013\n\n\n211\n\n\n2014\n\n\n816\n\n\n2015\n\n\n184\n\n\n2016\n\n\n4\n\n\n2017\n\n\n4\n\n\n2018\n\n\n9303\n\n\n2019\n\n\n18919\n\n\n2020\n\n\n7145\n\n\n\n\n#### Fazendo com o dygraph\n# casos.st.anos2 <- ts(casos.st.ano$casos.sarampo, start=c(2000), end=c(2020), frequency=1)\n# \n# dygraph(casos.st.anos2) |>  \n#   dySeries(\"V1\", label = \"Casos de Sarampo\") |>\n#   dyOptions(stackedGraph = TRUE) |>\n#                             dyBarChart() |>\n#                             dyRangeSelector(height = 20) |> \n#                             dyAxis(\"y\", label = \"Casos de Sarampo\") |> \n#                             dyUnzoom() \n\np <- ggplot(casos.st.ano, aes(x=ano_epi, y=casos.sarampo)) + \n     geom_bar(stat = \"identity\") +\n     xlab(\"Anos\") +  ylab(\"Casos de Sarampo\") +\n     theme_minimal()\n\nggplotly(p)\n\n\n\nSerie temporal mensal\n\n\n# Fazendo uma tabela de anos e meses\nmes_ano2000 <- as.data.frame(yearmonth(make_date(year = 2000, month = 1:12))) |>\n               rename_at(vars('yearmonth(make_date(year = 2000, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2001 <- as.data.frame(yearmonth(make_date(year = 2001, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2001, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2002 <- as.data.frame(yearmonth(make_date(year = 2002, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2002, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2003 <- as.data.frame(yearmonth(make_date(year = 2003, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2003, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2004 <- as.data.frame(yearmonth(make_date(year = 2004, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2004, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2005 <- as.data.frame(yearmonth(make_date(year = 2005, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2005, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2006 <- as.data.frame(yearmonth(make_date(year = 2006, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2006, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2007 <- as.data.frame(yearmonth(make_date(year = 2007, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2007, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2008 <- as.data.frame(yearmonth(make_date(year = 2008, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2008, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2009 <- as.data.frame(yearmonth(make_date(year = 2009, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2009, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2010 <- as.data.frame(yearmonth(make_date(year = 2010, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2010, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2011 <- as.data.frame(yearmonth(make_date(year = 2011, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2011, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2012 <- as.data.frame(yearmonth(make_date(year = 2012, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2012, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2013 <- as.data.frame(yearmonth(make_date(year = 2013, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2013, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2014 <- as.data.frame(yearmonth(make_date(year = 2014, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2014, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2015 <- as.data.frame(yearmonth(make_date(year = 2015, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2015, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2016 <- as.data.frame(yearmonth(make_date(year = 2016, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2016, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2017 <- as.data.frame(yearmonth(make_date(year = 2017, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2017, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2018 <- as.data.frame(yearmonth(make_date(year = 2018, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2018, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2019 <- as.data.frame(yearmonth(make_date(year = 2019, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2019, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\nmes_ano2020 <- as.data.frame(yearmonth(make_date(year = 2020, month = 1:12)))|>\n               rename_at(vars('yearmonth(make_date(year = 2020, month = 1:12))'), ~ c('mes_ano')) |>\n               mutate(freq = 1)\n\nmes_tabela <- rbind(mes_ano2000, mes_ano2001, mes_ano2002, mes_ano2003, mes_ano2004, mes_ano2005, mes_ano2006,\n                    mes_ano2007, mes_ano2008, mes_ano2009, mes_ano2010, mes_ano2011, mes_ano2012, mes_ano2013,\n                    mes_ano2014, mes_ano2015, mes_ano2016, mes_ano2017, mes_ano2018, mes_ano2019, mes_ano2010)\n\nrm(mes_ano2000, mes_ano2001, mes_ano2002, mes_ano2003, mes_ano2004, mes_ano2005, mes_ano2006,\n                    mes_ano2007, mes_ano2008, mes_ano2009, mes_ano2010, mes_ano2011, mes_ano2012, mes_ano2013,\n                    mes_ano2014, mes_ano2015, mes_ano2016, mes_ano2017, mes_ano2018, mes_ano2019, mes_ano2010)\n\ncasos.st <- casos |> \n           group_by(mes_ano) |>\n           count(name=\"casos.sarampo\") \n\ncasos.st <- mes_tabela |>\n           left_join(casos.st, by=\"mes_ano\") |>\n            mutate(casos.sarampo = ifelse(is.na(casos.sarampo), 0, casos.sarampo)) |>\n            dplyr::select(mes_ano, casos.sarampo)\n\n\n\n\ncasos.st2 <- ts(casos.st$casos.sarampo, start=c(2000, 1), end=c(2020, 12), frequency=12)\n\ndygraph(casos.st2) |>  \n  dySeries(\"V1\", label = \"Casos de Sarampo\")|>  \n    dyOptions(stackedGraph = TRUE) |>\n                       dyRangeSelector(height = 20) |> \n                       dyAxis(\"y\", label = \"Casos de Sarampo\") |> \n                       dyUnzoom() \n\n\n\nBase original (Exantemáticas)\nSerie temporal por ano\n\n\ncasos_2000_2007$DT_SIN_PRI2 <- as.Date(casos_2000_2007$DT_SIN_PRI, format=\"%d/%m/%Y\")\ncasos_2000_2007 <- casos_2000_2007 |> mutate(sem_epi = lubridate::epiweek(as.Date(DT_SIN_PRI2)),\n                          ano_epi = lubridate::epiyear(as.Date(DT_SIN_PRI2)),\n                          data_sem = aweek::get_date(sem_epi, ano_epi, start =7),\n                          mes_ano = yearmonth(DT_SIN_PRI2))\n\ncasos_2007_2020$DT_SIN_PRI2 <- as.Date(casos_2007_2020$DT_SIN_PRI, format=\"%d/%m/%Y\")\ncasos_2007_2020 <- casos_2007_2020 |> mutate(sem_epi = lubridate::epiweek(as.Date(DT_SIN_PRI2)),\n                          ano_epi = lubridate::epiyear(as.Date(DT_SIN_PRI2)),\n                          data_sem = aweek::get_date(sem_epi, ano_epi, start =7),\n                          mes_ano = yearmonth(DT_SIN_PRI2))\n\ncasos_2000_2007p <- casos_2000_2007 |> select(mes_ano, ano_epi)\ncasos_2007_2020p <- casos_2007_2020 |> select(mes_ano, ano_epi)\n\ncasos.orig <- rbind(casos_2000_2007p, casos_2007_2020p)\n\n# Fazendo uma tabela de anos\n\ncasos.st.orig.ano <- casos.orig |> \n           group_by(ano_epi) |>\n           count(name=\"casos.exantematicas\") \n\ncasos.st.orig.ano <- ano_tabela |>\n           left_join(casos.st.orig.ano, by=\"ano_epi\") |>\n            mutate(casos.exantematicas = ifelse(is.na(casos.exantematicas), 0, casos.exantematicas)) |>\n            dplyr::select(ano_epi, casos.exantematicas)\n\ncasos.st.orig.ano |>\n  select(ano_epi, casos.exantematicas) |>\n  kbl() |>\n  kable_paper(\"hover\", full_width=F)\n\n\nano_epi\n\n\ncasos.exantematicas\n\n\n2000\n\n\n53775\n\n\n2001\n\n\n45002\n\n\n2002\n\n\n27032\n\n\n2003\n\n\n20635\n\n\n2004\n\n\n18615\n\n\n2005\n\n\n22551\n\n\n2006\n\n\n21484\n\n\n2007\n\n\n41747\n\n\n2008\n\n\n26138\n\n\n2009\n\n\n10767\n\n\n2010\n\n\n10896\n\n\n2011\n\n\n8858\n\n\n2012\n\n\n6072\n\n\n2013\n\n\n6324\n\n\n2014\n\n\n7957\n\n\n2015\n\n\n6780\n\n\n2016\n\n\n2511\n\n\n2017\n\n\n2030\n\n\n2018\n\n\n18354\n\n\n2019\n\n\n68240\n\n\n2020\n\n\n17363\n\n\n\n\n#### Fazendo com o dygraph\n# casos.st.orig.ano2 <- ts(casos.st.orig.ano$casos.exantematicas, start=c(2000), end=c(2020), frequency=1)\n# \n# dygraph(casos.st.orig.ano2) |>  \n#    dySeries(\"V1\", label = \"Casos de Exantematicas\") |>\n#     dyOptions(stackedGraph = TRUE) |>\n#                             dyBarChart() |>\n#                             dyRangeSelector(height = 20) |> \n#                             dyAxis(\"y\", label = \"Casos de Exantematicas\") |> \n#                             dyUnzoom() \n\np <- ggplot(casos.st.orig.ano, aes(x=ano_epi, y=casos.exantematicas)) + \n     geom_bar(stat = \"identity\") +\n     xlab(\"Anos\") +  ylab(\"Casos Exantemáticas\") +\n     theme_minimal()\n\nggplotly(p)\n\n\n\nSerie temporal mensal\n\n\ncasos.orig.st <- casos.orig |> \n           group_by(mes_ano) |>\n           count(name=\"casos.exantematicas\") \n\ncasos.orig.st <- mes_tabela |>\n           left_join(casos.orig.st, by=\"mes_ano\") |>\n            mutate(casos.exantematicas = ifelse(is.na(casos.exantematicas), 0, casos.exantematicas)) |>\n            dplyr::select(mes_ano, casos.exantematicas)\n\n\n\n\ncasos.orig.st2 <- ts(casos.orig.st$casos.exantematicas, start=c(2000, 1), end=c(2021, 1), frequency=12)\n\ndygraph(casos.orig.st2) |> \n            dySeries(\"V1\", label = \"Casos de Exantematicas\") |>\n            dyOptions(stackedGraph = TRUE) |>\n                       dyRangeSelector(height = 20) |> \n                       dyAxis(\"y\", label = \"Casos de Exantematicas\") |> \n                       dyUnzoom() \n\n\n\nAnálise Espacial\n\n\n# Agregando os casos de sarampo por município de residencia\n\ncasos.mun <- casos |> \n             mutate(cod_mun2 = substr(ID_MN_RESI, 1, 6)) |> #recortando digitos\n             group_by(cod_mun2) |>\n             summarise(casos = n()) \n             \n\n# # 1) Criar uma variavel indicando os municipios dos casos que tem 6 \n# # e os com 6 digitos\n# \n# casos.mun <- casos.mun |> \n#               mutate(grupo = nchar(as.integer(ID_MN_RESI))) \n# \n# # 2) Separar os bancos para fazer os joins separados\n# \n# casos.mun.7 <- casos.mun |> \n#               filter(grupo == 7)\n# casos.mun.6 <- casos.mun |> \n#               filter(grupo == 6)\n\n\ncasos.mun.2 <- munic |>\n                   left_join(casos.mun, by=\"cod_mun2\") |>\n                   mutate(casos = replace_na(casos, 0), \n                          cod_mun = as.numeric(cod_mun))  \n                 \n\n# Agregando por microregioes\n\ncasos.micro <- casos.mun.2 |> \n                # mutate(cod_micro = as.factor(cod_micro)) |>\n                group_by(nome_micro) |>\n                summarise(casos = sum(casos)) \n\n# Agregando por mesoregioes\n\ncasos.meso <- casos.mun.2 |> \n                # mutate(cod_meso = as.numeric(cod_meso)) |>\n                group_by(nome_meso) |>\n                summarise(casos = sum(casos)) \n\n\n\n\n# Baixando os mapas\n# uf.sf <- read_state(year=2019)\n# mun.sf <- read_municipality(year=2019)\n# micro.sf <- read_micro_region(year=2019)\n# meso.sf <- read_meso_region(year=2019)\n# save(uf.sf, mun.sf, micro.sf, meso.sf, file = \"mapas.RData\")\nload(\"bases/mapas.RData\")\n\n# Convertendo as malhas de UTM para Lat Long ####\nuf.longlat <- st_transform(uf.sf, \"+proj=longlat +ellps=WGS84 +datum=WGS84\")\nmun.longlat <- st_transform(mun.sf, \"+proj=longlat +ellps=WGS84 +datum=WGS84\")\nmicro.longlat <- st_transform(micro.sf, \"+proj=longlat +ellps=WGS84 +datum=WGS84\")\nmeso.longlat <- st_transform(meso.sf, \"+proj=longlat +ellps=WGS84 +datum=WGS84\")\n\n\n# join the databases\nmun.longlat <- left_join(mun.longlat, casos.mun.2, by = c(\"code_muni\" = \"cod_mun\")) \nmun.longlat <- mun.longlat |>  mutate(casos = replace_na(casos, 0))\n\n# Transfromando em minuscula\nmicro.longlat$name_micro <- tolower(micro.longlat$name_micro)\ncasos.micro$nome_micro <- tolower(casos.micro$nome_micro)\n\nmicro.longlat <- left_join(micro.longlat, casos.micro, by = c(\"name_micro\" = \"nome_micro\"))\nmicro.longlat <- micro.longlat |>  mutate(casos = replace_na(casos, 0))\n\n# Transfromando em minuscula\nmeso.longlat$name_meso <- tolower(meso.longlat$name_meso)\ncasos.meso$nome_meso <- tolower(casos.meso$nome_meso)\n\nmeso.longlat <- left_join(meso.longlat, casos.meso, by = c(\"name_meso\" = \"nome_meso\"))\nmeso.longlat <- meso.longlat |>  mutate(casos = replace_na(casos, 0))\n\n\nDistribuição dos casos de sarampo por Microrregiões\n\n\nmytext.micro <- paste(\"<p>\", \"UF: \", mun.longlat$name_state, \"<p>\",\n                \"<p>\", \"Microregião: \", micro.longlat$name_micro, \"<p>\",\n                \"<p>\", \"Casos: \", micro.longlat$casos, \"<p>\",\n                 sep=\"\") |>\n          lapply(htmltools::HTML)\n\n# Criando uma espécie de função que criará uma escala de cores em função das classes de valores da variável\nbins.micro <- c(0, 1, 10, 50, 100, 500, 1000, 11000)\npal.micro <- colorBin(\"Blues\", domain = mun.longlat$casos, bins = bins.micro)\n\n\n\n# greens = colorNumeric(\"Greens\", domain = mun.longlat$casos)\n\nmapa <- leaflet(data = mun.longlat) |> # O básico\n        addTiles() |> # Determinar basemap\n############### Layer das Microregiões ############\n        addPolygons(data= micro.longlat,\n              color = 'grey',\n              weight = 1,\n              smoothFactor = 0.5,\n              fillOpacity = 0.8,\n              fillColor = pal.micro(micro.longlat$casos),\n              label = mytext.micro,\n              labelOptions = labelOptions(\n                style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n                textsize = \"13px\",\n                direction = \"auto\"),\n                group = \"Microregiões\") |>\n############## Polígonos das UFs ################\n  addPolygons(data=uf.longlat,\n              color = 'black',\n              weight = 1.5,\n              smoothFactor = 1,\n              fill = FALSE,\n              labelOptions = labelOptions(\n                style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n                textsize = \"13px\",\n                direction = \"auto\"),\n                group = \"UFs\") |>\n############### Layer das Mesoregiões ############\n        # addPolygons(data= meso.longlat,\n        #       color = 'grey',\n        #       weight = 1,\n        #       smoothFactor = 0.5,\n        #       fillOpacity = 0.8,\n        #       fillColor = pal.meso(meso.longlat$casos),\n        #       label = mytext.meso,\n        #       labelOptions = labelOptions(\n        #         style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n        #         textsize = \"13px\",\n        #         direction = \"auto\"),\n        #         group = \"Mesoregiões\") |>\n############## Legenda do Mapa Temático ################\n  leaflet::addLegend(pal = pal.micro,\n            title = \"Casos de Sarampo\",\n            values =  micro.longlat,\n            opacity = 1,\n            position = \"topright\") |>\n############## Colocando o botão de refazer #####################\nsetMaxBounds(lng1 = -70, lat1 = 2, lng2 = -37, lat2 = -36) |>\n  #setView(lng = -46, lat = -25, zoom = 11) |>\n  addEasyButton(easyButton(\n    icon = 'fa-home',\n    title = 'Reset view',\n    onClick =  JS(\"function(btn, map) {\n       var groupLayer = map.layerManager.getLayerGroup('Casos');\n       map.fitBounds(groupLayer.getBounds());}\" )\n  )) |>\n############## Controle das layers ################\n  addLayersControl(\n    # baseGroups = c(\"tipo1\", \"Tipo2\", \"Tipo3\"),\n    overlayGroups = c(\"Microregiões\", \"UFs\"),\n    options = layersControlOptions(collapsed = FALSE),\n    position = \"bottomright\")\n\nmapa\n\n\n",
      "last_modified": "2022-12-30T18:19:23-03:00"
    }
  ],
  "collections": ["posts/posts.json"]
}
